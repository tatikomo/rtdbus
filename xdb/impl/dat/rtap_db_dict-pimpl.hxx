// Not copyrighted - public domain.
//
// This sample parser implementation was generated by CodeSynthesis XSD,
// an XML Schema to C++ data binding compiler. You may use it in your
// programs without any restrictions.
//

#ifndef RTAP_DB_DICT_PIMPL_HXX
#define RTAP_DB_DICT_PIMPL_HXX

#include "rtap_db_dict-pskel.hxx"

namespace rtap_db_dict
{
  class ObjClassEntry_pimpl: public virtual ObjClassEntry_pskel,
    public ::xml_schema::integer_pimpl
  {
    public:
    virtual void
    pre ();

    virtual rtap_db_dict::ObjClass_t
    post_ObjClassEntry ();
  };

  class ValueEntry_pimpl: public virtual ValueEntry_pskel,
    public ::xml_schema::integer_pimpl
  {
    public:
    virtual void
    pre ();

    virtual rtap_db_dict::id_t
    post_ValueEntry ();
  };

  class ValueLabelEntry_pimpl: public virtual ValueLabelEntry_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual rtap_db_dict::Label_t&
    post_ValueLabelEntry ();
  };

  class UnityIdEntry_pimpl: public virtual UnityIdEntry_pskel,
    public ::xml_schema::integer_pimpl
  {
    public:
    virtual void
    pre ();

    virtual rtap_db_dict::id_t
    post_UnityIdEntry ();
  };

  class UnityDimensionType_pimpl: public virtual UnityDimensionType_pskel,
    public ::xml_schema::integer_pimpl
  {
    public:
    virtual void
    pre ();

    virtual rtap_db_dict::id_t
    post_UnityDimensionType ();
  };

  class UnityDimensionEntry_pimpl: public virtual UnityDimensionEntry_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual rtap_db_dict::Label_t&
    post_UnityDimensionEntry ();
  };

  class UnityIdType_pimpl: public virtual UnityIdType_pskel,
    public ::xml_schema::integer_pimpl
  {
    public:
    virtual void
    pre ();

    virtual rtap_db_dict::id_t
    post_UnityIdType ();
  };

  class UnityLabelEntry_pimpl: public virtual UnityLabelEntry_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual rtap_db_dict::Label_t&
    post_UnityLabelEntry ();
  };

  class UnityDesignationEntry_pimpl: public virtual UnityDesignationEntry_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual rtap_db_dict::Label_t&
    post_UnityDesignationEntry ();
  };

  class InfoTypeEntry_pimpl: public virtual InfoTypeEntry_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual rtap_db_dict::Label_t&
    post_InfoTypeEntry ();
  };

  class Dictionaries_pimpl: public virtual Dictionaries_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    UNITY_LABEL ();

    virtual void
    VAL_LABEL ();

    virtual void
    INFO_TYPES ();

    virtual void
    post_Dictionaries ();
  };

  class UNITY_LABEL_pimpl: public virtual UNITY_LABEL_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    UnityDimensionId (const rtap_db_dict::id_t&);

    virtual void
    UnityDimension (rtap_db_dict::Label_t&);

    virtual void
    UnityId (const rtap_db_dict::id_t&);

    virtual void
    UnityLabel (rtap_db_dict::Label_t&);

    virtual void
    UnityDesignation (rtap_db_dict::Label_t&);

    virtual void
    post_UNITY_LABEL ();
  };

  class VAL_LABEL_pimpl: public virtual VAL_LABEL_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    ObjClass (const rtap_db_dict::ObjClass_t&);

    virtual void
    Val (const rtap_db_dict::id_t&);

    virtual void
    ValueLabel (rtap_db_dict::Label_t&);

    virtual void
    post_VAL_LABEL ();
  };

  class INFO_TYPES_pimpl: public virtual INFO_TYPES_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    ObjClass (const rtap_db_dict::ObjClass_t&);

    virtual void
    IntoType (rtap_db_dict::Label_t&);

    virtual void
    InfoTypeDesignation (const ::std::string&);

    virtual void
    post_INFO_TYPES ();
  };
}

#endif // RTAP_DB_DICT_PIMPL_HXX
